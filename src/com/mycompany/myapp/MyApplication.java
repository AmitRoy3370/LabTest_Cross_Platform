package com.mycompany.myapp;

import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Component;
import com.codename1.ui.layouts.FlowLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication implements FontInterface {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {

        if (current != null) {
            current.show();
            return;
        }

        Form form = new Form("Home Page", new FlowLayout(Component.CENTER, Component.CENTER));

        Label label = new Label("Welcome to our Simec medical test center");

        label.getAllStyles().setFont(font);

        form.add(label);

        Toolbar toolbar = new Toolbar();

        form.setToolBar(toolbar);

        toolbar.addCommandToSideMenu("Add", null, e -> {

            AddLabTest addLabTest = new AddLabTest();

            addLabTest.start();

            this.destroy();

        });

        toolbar.addCommandToSideMenu("Search", null, e -> {

            SearchLabTest searchLabTest = new SearchLabTest();

            searchLabTest.start();

            this.destroy();

        });

        form.show();

        //current = form;
    }

    public void destroy() {
    }

}
